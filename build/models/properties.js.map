{"version":3,"sources":["../../server/models/properties.js"],"names":["PropertyOperations","propertyDetail","Promise","resolve","price","state","city","address","type","image_url","ownerEmail","ownerPhoneNumber","id","String","PropertyStore","length","created_on","Date","status","newProperty","push","data","statusCode","properties","filter","prop","forEach","property","error","updates","updateKeys","Object","keys","key","deleted","splice"],"mappings":"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","sourcesContent":["/* eslint-disable object-property-newline */\r\n/* eslint-disable camelcase */\r\nimport PropertyStore from '../db/propertyStore';\r\n\r\nclass PropertyOperations {\r\n  static createProperty(propertyDetail) {\r\n    return new Promise((resolve) => {\r\n      const {\r\n        price, state, city, address, type, image_url, ownerEmail, ownerPhoneNumber,\r\n      } = propertyDetail;\r\n      const id = String(PropertyStore.length + 1);\r\n      const created_on = new Date();\r\n      const status = 'available';\r\n      const newProperty = {\r\n        id, status, price, state, city, address, type, created_on,\r\n        image_url, ownerEmail, ownerPhoneNumber,\r\n      };\r\n\r\n      PropertyStore.push(newProperty);\r\n      const data = {\r\n        id, status, price, state, city, address, type, created_on, image_url,\r\n      };\r\n      resolve({ statusCode: 201, data, status: 'success' });\r\n    });\r\n  }\r\n\r\n  static getAll() {\r\n    return new Promise((resolve) => {\r\n      resolve({ statusCode: 200, data: PropertyStore, status: 'success' });\r\n    });\r\n  }\r\n\r\n  static getAllByType(type) {\r\n    return new Promise((resolve) => {\r\n      const properties = PropertyStore.filter(prop => prop.type === type);\r\n      resolve({ statusCode: 200, data: properties, status: 'success' });\r\n    });\r\n  }\r\n\r\n  static getOneById(id) {\r\n    return new Promise((resolve) => {\r\n      PropertyStore.forEach((property) => {\r\n        if (property.id === id) {\r\n          resolve({ statusCode: 200, data: property, status: 'success' });\r\n        }\r\n      });\r\n\r\n      resolve({ statusCode: 404, error: 'property does not exist', status: 'error' });\r\n    });\r\n  }\r\n\r\n  static updateOne(id, updates) {\r\n    return new Promise((resolve) => {\r\n      const property = PropertyStore[id - 1];\r\n      if (id <= 0 || !property) return resolve(false);\r\n\r\n      const updateKeys = Object.keys(updates);\r\n      updateKeys.forEach((key) => {\r\n        PropertyStore[id - 1][key] = updates[key];\r\n      });\r\n\r\n      return resolve(PropertyStore[id - 1]);\r\n    });\r\n  }\r\n\r\n  static deleteOne(id) {\r\n    return new Promise((resolve) => {\r\n      if (id <= 0) return resolve(false);\r\n      const deleted = PropertyStore.splice(id - 1, 1);\r\n      if (!deleted[0]) return resolve(false);\r\n      return resolve(deleted[0]);\r\n    });\r\n  }\r\n}\r\n\r\nexport default PropertyOperations;\r\n"],"file":"properties.js"}