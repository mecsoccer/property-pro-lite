{"version":3,"sources":["../../../server/test/controllers/userController.spec.js"],"names":["chai","use","chaiHttp","expect","newValidUser","userData","userInvalidEmail","userInvalidFirstName","userInvalidLastName","userInvalidPassword","userInvalidAddress","userInvalidPhone","userInvalidIsAdmin","invalidSignInPassword","wrongSignInEmail","wrongSignInPassword","correctSignin","describe","it","done","request","app","post","send","end","err","res","to","equal","status","body","have","property","that","is","an","equals","data","not","a"],"mappings":"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","sourcesContent":["import chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport app from '../../index';\r\nimport userData from '../testData/userData';\r\n\r\nchai.use(chaiHttp);\r\nconst { expect } = chai;\r\n\r\nconst {\r\n  newValidUser, userInvalidEmail, userInvalidFirstName, userInvalidLastName, userInvalidPassword,\r\n  userInvalidAddress, userInvalidPhone, userInvalidIsAdmin, invalidSignInPassword,\r\n  wrongSignInEmail, wrongSignInPassword, correctSignin,\r\n} = userData;\r\n\r\ndescribe('Tests for User Routes', () => {\r\n  describe('tests for sign up route', () => {\r\n    it('#should return 201 and created object if data is valid', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .send(newValidUser)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.status).to.equal(201);\r\n          expect(res.body).to.have.property('data').that.is.an('object');\r\n          expect(res.body).to.have.property('status').that.equals('success');\r\n          expect(res.body.data).to.not.have.property('password');\r\n          expect(res.body.data).to.have.property('email').that.is.a('string');\r\n          expect(res.body.data).to.have.property('first_name').that.is.a('string');\r\n          expect(res.body.data).to.have.property('last_name').that.is.a('string');\r\n          expect(res.body.data).to.have.property('id');\r\n          expect(res.body.data).to.have.property('token').that.is.a('string');\r\n          expect(res.body.data).to.have.property('is_admin').that.is.a('boolean');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('- should return 409 if email already exists -', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .send(newValidUser)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.status).to.equal(409);\r\n          expect(res.body).to.have.property('error').that.is.an('string');\r\n          expect(res.body).to.have.property('status').that.equals('error');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('- should return 422, error message and email as error field -', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .send(userInvalidEmail)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.status).to.equal(422);\r\n          expect(res.body).to.have.property('error').that.is.a('string');\r\n          expect(res.body).to.have.property('status').that.equals('error');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('- should return 422, error message and firstname as error field -', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .send(userInvalidFirstName)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.status).to.equal(422);\r\n          expect(res.body).to.have.property('error').that.is.a('string');\r\n          expect(res.body).to.have.property('status').that.equals('error');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('- should return 422, error message and last_name as error field -', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .send(userInvalidLastName)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.status).to.equal(422);\r\n          expect(res.body).to.have.property('error').that.is.a('string');\r\n          expect(res.body).to.have.property('status').that.equals('error');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('- should return 422, error message and password as error field -', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .send(userInvalidPassword)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.status).to.equal(422);\r\n          expect(res.body).to.have.property('error').that.is.a('string');\r\n          expect(res.body).to.have.property('status').that.equals('error');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('- should return 422, error message and phoneNumber as error field -', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .send(userInvalidPhone)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.status).to.equal(422);\r\n          expect(res.body).to.have.property('error').that.is.a('string');\r\n          expect(res.body).to.have.property('status').that.equals('error');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('- should return 422, error message and address as error field -', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .send(userInvalidAddress)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.status).to.equal(422);\r\n          expect(res.body).to.have.property('error').that.is.a('string');\r\n          expect(res.body).to.have.property('status').that.equals('error');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('- should return 422, error message and is_admin as error field -', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .send(userInvalidIsAdmin)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.status).to.equal(422);\r\n          expect(res.body).to.have.property('error').that.is.a('string');\r\n          expect(res.body).to.have.property('status').that.equals('error');\r\n          done();\r\n        });\r\n    });\r\n  });\r\n\r\n  describe('tests for sign in route', () => {\r\n    it('# should login user if data is correct', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/signin')\r\n        .send(correctSignin)\r\n        .end((err, res) => {\r\n          expect(res.status).to.equal(200);\r\n          expect(res.body).to.have.property('status').that.equals('success');\r\n          expect(res.body).to.have.property('data').that.is.an('object');\r\n          expect(res.body.data).to.have.property('token').that.is.a('string');\r\n          expect(res.body.data).to.have.property('id');\r\n          expect(res.body.data).to.have.property('first_name').that.is.a('string');\r\n          expect(res.body.data).to.have.property('last_name').that.is.a('string');\r\n          expect(res.body.data).to.have.property('email').that.is.a('string');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('# should return 401 and error message for incorrect email', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/signin')\r\n        .send(wrongSignInEmail)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.status).to.equal(401);\r\n          expect(res.body).to.have.property('error').that.is.a('string');\r\n          expect(res.body).to.have.property('status').that.equals('error');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('# should return 401 and error message for incorrect password', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/signin')\r\n        .send(wrongSignInPassword)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.status).to.equal(401);\r\n          expect(res.body).to.have.property('error').that.is.a('string');\r\n          expect(res.body).to.have.property('status').that.equals('error');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('# should return 422 and error message for invalid email -', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/signin')\r\n        .send(userInvalidEmail)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.status).to.equal(422);\r\n          expect(res.body).to.have.property('error').that.is.a('string');\r\n          expect(res.body).to.have.property('status').that.equals('error');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('# should return 422 and error message for invalid password', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/signin')\r\n        .send(invalidSignInPassword)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.status).to.equal(422);\r\n          expect(res.body).to.have.property('error').that.is.a('string');\r\n          expect(res.body).to.have.property('status').that.equals('error');\r\n          done();\r\n        });\r\n    });\r\n  });\r\n});\r\n"],"file":"userController.spec.js"}