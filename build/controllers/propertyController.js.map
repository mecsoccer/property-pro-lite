{"version":3,"sources":["../../server/controllers/propertyController.js"],"names":["PropertyController","req","res","UserOperations","getUserById","body","owner","then","result","error","statusCode","status","json","data","email","phoneNumber","ownerEmail","ownerPhoneNumber","PropertyOperations","createProperty","response","getAll","type","params","getAllByType","id","getOneById","updateOne","validData","deleteOne"],"mappings":"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","sourcesContent":["import PropertyOperations from '../models/properties';\r\nimport UserOperations from '../models/users';\r\n\r\nclass PropertyController {\r\n  static createNewProperty(req, res) {\r\n    UserOperations.getUserById(req.body.owner)\r\n      .then((result) => {\r\n        if (result.error) {\r\n          const { statusCode, error, status } = result;\r\n          return res.status(statusCode).json({ status, error });\r\n        }\r\n        const { email, phoneNumber } = result.data;\r\n        req.body.ownerEmail = email;\r\n        req.body.ownerPhoneNumber = phoneNumber;\r\n        return req.body;\r\n      })\r\n      .then((result) => {\r\n        PropertyOperations.createProperty(result)\r\n          .then((response) => {\r\n            if (response.error) {\r\n              const { statusCode, error, status } = response;\r\n              return res.status(statusCode).json({ status, error });\r\n            }\r\n            const { statusCode, data, status } = response;\r\n            res.status(statusCode).json({ status, data });\r\n          })\r\n          .catch(() => res.status(500).json('service unavailable'));\r\n      })\r\n      .catch(/* istanbul ignore next */() => res.status(500).json({ error: 'something went wrong' }));\r\n  }\r\n\r\n  static getAllProperties(req, res) {\r\n    PropertyOperations.getAll()\r\n      .then((result) => {\r\n        const { statusCode, data, status } = result;\r\n        res.status(statusCode).json({ status, data });\r\n      })\r\n      .catch(/* istanbul ignore next */() => res.status(500).json({ error: 'something went wrong' }));\r\n  }\r\n\r\n  static getPropertiesByType(req, res) {\r\n    const { type } = req.params;\r\n    PropertyOperations.getAllByType(type)\r\n      .then((result) => {\r\n        const { statusCode, data, status } = result;\r\n        res.status(statusCode).json({ status, data });\r\n      })\r\n      .catch(/* istanbul ignore next */() => res.status(500).json({ error: 'something went wrong' }));\r\n  }\r\n\r\n  static getPropertyById(req, res) {\r\n    const { id } = req.params;\r\n    PropertyOperations.getOneById(id)\r\n      .then((result) => {\r\n        if (result.error) {\r\n          const { statusCode, error, status } = result;\r\n          return res.status(statusCode).json({ status, error });\r\n        }\r\n        const { statusCode, data, status } = result;\r\n        res.status(statusCode).json({ status, data });\r\n      })\r\n      .catch(/* istanbul ignore next */() => res.status(500).json({ error: 'something went wrong' }));\r\n  }\r\n\r\n  static updateProperty(req, res) {\r\n    const { id } = req.params;\r\n    PropertyOperations.updateOne(id, req.validData)\r\n      .then((result) => {\r\n        if (result === false) return res.status(404).json({ status: 'error', error: 'id does not exist' });\r\n        return res.status(200).json({ status: 'success', data: result });\r\n      })\r\n      .catch(/* istanbul ignore next */() => res.status(500).json({ error: 'something went wrong' }));\r\n  }\r\n\r\n  static deleteProperty(req, res) {\r\n    const { id } = req.params;\r\n    PropertyOperations.deleteOne(id)\r\n      .then((result) => {\r\n        if (!result) return res.status(404).json({ status: 'error', error: 'id not available' });\r\n        return res.status(200).json({ status: 'success', data: result });\r\n      })\r\n      .catch(/* istanbul ignore next */() => res.status(500).json({ error: 'something went wrong' }));\r\n  }\r\n}\r\n\r\nexport default PropertyController;\r\n"],"file":"propertyController.js"}