{"version":3,"sources":["../../../server/middlewares/validation/propertyValidation.js"],"names":["validateTextField","Validate","PropertyValidation","req","res","next","body","owner","price","state","city","address","type","image_url","ownerValid","priceValid","stateValid","cityValid","addressValid","typeValid","imageUrlValid","status","json","error","validData","keys","Object","supplied","filter","key","forEach"],"mappings":"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","sourcesContent":["/* eslint-disable no-useless-escape */\r\n/* eslint-disable camelcase */\r\nimport Validate from './library/validationLibrary';\r\n\r\nconst { validateTextField } = Validate;\r\n\r\nclass PropertyValidation {\r\n  static validateProperty(req, res, next) {\r\n    const {\r\n      owner, price, state, city, address, type, image_url,\r\n    } = req.body;\r\n\r\n    const ownerValid = validateTextField('owner', owner, 1, 25, /^\\d+$/gi, '1');\r\n    const priceValid = validateTextField('price', price, 2, 30, /^\\d+\\.\\d{2,2}$/gi, '800000.00');\r\n    const stateValid = validateTextField('state', state, 2, 30, /^[a-z]+$/gi, 'abia, imo');\r\n    const cityValid = validateTextField('city', city, 2, 30, /^[a-z]+$/gi, 'umuahia, ikeja');\r\n    const addressValid = validateTextField('address', address, 2, 250, /^[a-z]+[\\w\\s\\.,]+$/gi, 'no.6 some where in lagos');\r\n    const typeValid = validateTextField('type', type, 2, 250, /^[\\w\\s\\.-]+$/gi, '2 bedroom, self contained');\r\n    const imageUrlValid = validateTextField('image_url', image_url, 2, 300, /^.+$/gi, 'https://images.com/img/myimg.png');\r\n\r\n    if (ownerValid !== true) {\r\n      res.status(422).json({ error: ownerValid.error, status: 'error' });\r\n    } else if (priceValid !== true) {\r\n      res.status(422).json({ error: priceValid.error, status: 'error' });\r\n    } else if (stateValid !== true) {\r\n      res.status(422).json({ error: stateValid.error, status: 'error' });\r\n    } else if (cityValid !== true) {\r\n      res.status(422).json({ error: cityValid.error, status: 'error' });\r\n    } else if (addressValid !== true) {\r\n      res.status(422).json({ error: addressValid.error, status: 'error' });\r\n    } else if (typeValid !== true) {\r\n      res.status(422).json({ error: typeValid.error, status: 'error' });\r\n    } else if (imageUrlValid !== true) {\r\n      res.status(422).json({ error: imageUrlValid.error, status: 'error' });\r\n    } else {\r\n      next();\r\n    }\r\n  }\r\n\r\n  static validatePropertyUpdate(req, res, next) {\r\n    const {\r\n      price, state, city, address, type, image_url,\r\n    } = req.body;\r\n\r\n    const priceValid = validateTextField('price', price, 2, 30, /^\\d+\\.\\d{2,2}$/gi, '800000.00', false);\r\n    const stateValid = validateTextField('state', state, 2, 30, /^[a-z]+$/gi, 'abia, imo', false);\r\n    const cityValid = validateTextField('city', city, 2, 30, /^[a-z]+$/gi, 'umuahia, ikeja', false);\r\n    const addressValid = validateTextField('address', address, 2, 250, /^[a-z]+[\\w\\s\\.,]+$/gi, 'no.6 some where in lagos', false);\r\n    const typeValid = validateTextField('type', type, 2, 250, /^[\\w\\s\\.-]+$/gi, '2 bedroom, self contained', false);\r\n    const imageUrlValid = validateTextField('image_url', image_url, 2, 300, /^.+$/gi, 'https://images.com/img/myimg.png', false);\r\n\r\n    if (priceValid !== true) {\r\n      res.status(422).json({ error: priceValid.error, status: 'error' });\r\n    } else if (stateValid !== true) {\r\n      res.status(422).json({ error: stateValid.error, status: 'error' });\r\n    } else if (cityValid !== true) {\r\n      res.status(422).json({ error: cityValid.error, status: 'error' });\r\n    } else if (addressValid !== true) {\r\n      res.status(422).json({ error: addressValid.error, status: 'error' });\r\n    } else if (typeValid !== true) {\r\n      res.status(422).json({ error: typeValid.error, status: 'error' });\r\n    } else if (imageUrlValid !== true) {\r\n      res.status(422).json({ error: imageUrlValid.error, status: 'error' });\r\n    } else {\r\n      const validData = {};\r\n      const keys = Object.keys(req.body);\r\n      const supplied = keys.filter(key => req.body[key]);\r\n      supplied.forEach((key) => {\r\n        validData[key] = req.body[key];\r\n      });\r\n      req.validData = validData;\r\n      next();\r\n    }\r\n  }\r\n}\r\n\r\nexport default PropertyValidation;\r\n"],"file":"propertyValidation.js"}