{"version":3,"sources":["../../../server/middlewares/validation/userValidation.js"],"names":["validateTextField","Validate","validatePasswordField","Validation","req","res","next","body","email","first_name","last_name","password","phoneNumber","address","is_admin","emailValid","firstNameValid","lastNameValid","passwordValid","phoneNumberValid","addressValid","status","json","error","hash","bcrypt","hashSync","validData"],"mappings":"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","sourcesContent":["/* eslint-disable camelcase */\r\nimport bcrypt from 'bcryptjs';\r\nimport Validate from './library/validationLibrary';\r\n\r\n\r\nconst { validateTextField, validatePasswordField } = Validate;\r\n\r\nclass Validation {\r\n  static validateUser(req, res, next) {\r\n    const {\r\n      email, first_name, last_name, password, phoneNumber, address, is_admin,\r\n    } = req.body;\r\n\r\n    const emailValid = validateTextField('email', email, 7, 100, /^[a-z][\\w\\.-]+@[a-z]+\\.[a-z]+$/gi, 'myname@mycompanyname.com');\r\n    const firstNameValid = validateTextField('first_name', first_name, 2, 30, /^[a-z]+$/gi, 'john, james');\r\n    const lastNameValid = validateTextField('last_name', last_name, 2, 30, /^[a-z]+$/gi, 'john, james');\r\n    const passwordValid = validatePasswordField('password', password, 6, 16, 'dkSSD32336##');\r\n    const phoneNumberValid = validateTextField('phoneNumber', phoneNumber, 5, 20, /^(\\+234\\d+|\\d+)$/g, '08093457891');\r\n    const addressValid = validateTextField('address', address, 2, 250, /^[\\w\\s.,]+$/gi, 'no.36 oniwaya rd. agege, lagos state');\r\n\r\n    if (emailValid !== true) {\r\n      res.status(422).json({ error: emailValid.error, status: 'error' });\r\n    } else if (firstNameValid !== true) {\r\n      res.status(422).json({ error: firstNameValid.error, status: 'error' });\r\n    } else if (lastNameValid !== true) {\r\n      res.status(422).json({ error: lastNameValid.error, status: 'error' });\r\n    } else if (passwordValid !== true) {\r\n      res.status(422).json({ error: passwordValid.error, status: 'error' });\r\n    } else if (phoneNumberValid !== true) {\r\n      res.status(422).json({ error: phoneNumberValid.error, status: 'error' });\r\n    } else if (addressValid !== true) {\r\n      res.status(422).json({ error: addressValid.error, status: 'error' });\r\n    } else if (typeof is_admin !== 'boolean') {\r\n      res.status(422).json({ error: 'is_admin field must be a boolean', status: 'error' });\r\n    } else {\r\n      const hash = bcrypt.hashSync(password, 10);\r\n      req.validData = {\r\n        email, first_name, last_name, password: hash, phoneNumber, address, is_admin,\r\n      };\r\n      next();\r\n    }\r\n  }\r\n\r\n  static validateSignin(req, res, next) {\r\n    const {\r\n      email, password,\r\n    } = req.body;\r\n\r\n    const emailValid = validateTextField('email', email, 7, 100, /^[a-z][\\w\\.-]+@[a-z]+\\.[a-z]+$/gi, 'myname@mycompanyname.com');\r\n\r\n    if (emailValid !== true) {\r\n      res.status(422).json({ error: emailValid.error, status: 'error' });\r\n    } else if (!password || typeof password !== 'string' || password === '') {\r\n      res.status(422).json({ error: 'password invalid', status: 'error' });\r\n    } else {\r\n      next();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Validation;\r\n"],"file":"userValidation.js"}